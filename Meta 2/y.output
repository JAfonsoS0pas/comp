Terminals unused in grammar

   BOOL
   BOOLLIT
   CLASS
   DO
   DOTLENGTH
   DOUBLE
   ELSE
   IF
   INT
   PARSEINT
   PRINT
   PUBLIC
   RETURN
   STATIC
   STRING
   VOID
   WHILE
   OCURV
   CCURV
   OBRACE
   CBRACE
   OSQUARE
   CSQUARE
   AND
   OR
   LT
   GT
   EQ
   NEQ
   LEQ
   GEQ
   PLUS
   MINUS
   STAR
   DIV
   MOD
   NOT
   ASSIGN
   SEMI
   COMMA
   DECLIT
   REALLIT
   RESERVED
   STRLIT


Grammar

    0 $accept: expression $end

    1 expression: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258)
BOOLLIT (259)
CLASS (260)
DO (261)
DOTLENGTH (262)
DOUBLE (263)
ELSE (264)
IF (265)
INT (266)
PARSEINT (267)
PRINT (268)
PUBLIC (269)
RETURN (270)
STATIC (271)
STRING (272)
VOID (273)
WHILE (274)
OCURV (275)
CCURV (276)
OBRACE (277)
CBRACE (278)
OSQUARE (279)
CSQUARE (280)
AND (281)
OR (282)
LT (283)
GT (284)
EQ (285)
NEQ (286)
LEQ (287)
GEQ (288)
PLUS (289)
MINUS (290)
STAR (291)
DIV (292)
MOD (293)
NOT (294)
ASSIGN (295)
SEMI (296)
COMMA (297)
DECLIT (298)
REALLIT (299)
RESERVED (300)
ID (301) 1
STRLIT (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
expression (49)
    on left: 1, on right: 0


State 0

    0 $accept: . expression $end

    ID  shift, and go to state 1

    expression  go to state 2


State 1

    1 expression: ID .

    $default  reduce using rule 1 (expression)


State 2

    0 $accept: expression . $end

    $end  shift, and go to state 3


State 3

    0 $accept: expression $end .

    $default  accept
